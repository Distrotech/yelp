<?xml version='1.0' encoding='UTF-8'?><!-- -*- indent-tabs-mode: nil -*- -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:yelp="http://www.gnome.org/yelp/ns"
                xmlns="http://www.w3.org/1999/xhtml"
                extension-element-prefixes="yelp"
                version="1.0">

<xsl:import href="@DB2HTML@"/>

<xsl:param name="yelp.icon.blockquote"/>
<xsl:param name="yelp.icon.caution"/>
<xsl:param name="yelp.icon.important"/>
<xsl:param name="yelp.icon.next"/>
<xsl:param name="yelp.icon.note"/>
<xsl:param name="yelp.icon.previous"/>
<xsl:param name="yelp.icon.programlisting"/>
<xsl:param name="yelp.icon.tip"/>
<xsl:param name="yelp.icon.warning"/>

<xsl:param name="yelp.color.text"/>
<xsl:param name="yelp.color.anchor"/>
<xsl:param name="yelp.color.background"/>
<xsl:param name="yelp.color.rule"/>
<xsl:param name="yelp.color.base0"/>
<xsl:param name="yelp.color.base1"/>
<xsl:param name="yelp.color.base2"/>
<xsl:param name="yelp.color.base3"/>
<xsl:param name="yelp.color.selected0"/>
<xsl:param name="yelp.color.selected1"/>
<xsl:param name="yelp.color.selected2"/>
<xsl:param name="yelp.color.selected3"/>

<xsl:param name="yelp.color.yellow.bg"/>
<xsl:param name="yelp.color.yellow.fg"/>

<xsl:param name="db2html.admon.border_color"
           select="$yelp.color.selected0"/>

<xsl:param name="db2html.programlisting.background_color"
           select="$yelp.color.base0"/>
<xsl:param name="db2html.programlisting.border_color"
           select="$yelp.color.base1"/>
<xsl:param name="db2html.screen.background_color"
           select="$yelp.color.base0"/>
<xsl:param name="db2html.screen.border_color"
           select="$yelp.color.base1"/>

<xsl:param name="db2html.table.rule_color"
	   select="$yelp.color.rule"/>

<xsl:param name="db.chunk.chunk_top" select="true()"/>
<xsl:param name="db.chunk.extension" select="''"/>
<xsl:param name="db.chunk.cover_basename" select="'__yelp_cover'"/>
<xsl:param name="db.chunk.info_basename"  select="'__yelp_info'"/>
<xsl:param name="db.chunk.index_basename" select="'__yelp_index'"/>
<xsl:param name="db.chunk.toc_basename"   select="'__yelp_toc'"/>

<!-- == db.chunk == -->
<xsl:template name="db.chunk">
  <xsl:param name="node" select="."/>
  <xsl:param name="info"/>
  <xsl:param name="template"/>
  <xsl:param name="href">
    <xsl:choose>
      <xsl:when test="$template = 'cover'">
        <xsl:value-of select="$db.chunk.cover_basename"/>
      </xsl:when>
      <xsl:when test="$template = 'info'">
        <xsl:value-of select="$db.chunk.info_basename"/>
      </xsl:when>
      <xsl:when test="$template = 'index'">
        <xsl:value-of select="$db.chunk.index_basename"/>
      </xsl:when>
      <xsl:when test="$template = 'toc'">
        <xsl:value-of select="$db.chunk.toc_basename"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$node/@id"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:param>
  <xsl:param name="depth_of_chunk">
    <xsl:call-template name="db.chunk.depth-of-chunk">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </xsl:param>
  <yelp:document href="{$href}">
    <xsl:call-template name="db.chunk.content">
      <xsl:with-param name="node" select="$node"/>
      <xsl:with-param name="info" select="$info"/>
      <xsl:with-param name="template" select="$template"/>
      <xsl:with-param name="depth_of_chunk" select="$depth_of_chunk"/>
    </xsl:call-template>
  </yelp:document>
  <xsl:if test="string($template) = ''">
    <xsl:call-template name="db.chunk.children">
      <xsl:with-param name="node" select="$node"/>
      <xsl:with-param name="depth_of_chunk" select="$depth_of_chunk"/>
    </xsl:call-template>
  </xsl:if>
</xsl:template>

<!-- == db.xref.target == -->
<xsl:template name="db.xref.target">
  <xsl:param name="linkend"/>
  <xsl:value-of select="concat('#', $linkend)"/>
</xsl:template>

<!-- == db2html.css.custom == -->
<xsl:template name="db2html.css.custom">
  <xsl:text>
    h1 { font-size: 1.4em; }
    h2 { font-size: 1.2em; }
    h1 + div h2[class~="title"] { margin-top: 2em; }
    h1, h2, h3, h4, h5, h6, h7 { color: </xsl:text>
    <xsl:value-of select="$yelp.color.selected1"/><xsl:text>; }
    h3 span[class~="title"] { border-bottom: none; }
    h4 span[class~="title"] { border-bottom: none; }
    h5 span[class~="title"] { border-bottom: none; }
    h6 span[class~="title"] { border-bottom: none; }
    h7 span[class~="title"] { border-bottom: none; }

    div[class~="admonition"] {
      color: </xsl:text>
      <xsl:value-of select="$yelp.color.base3"/><xsl:text>;
      border-color: </xsl:text>
      <xsl:value-of select="$yelp.color.yellow.fg"/><xsl:text>;
      -moz-border-radius-topleft: 12px;
      -moz-border-radius-bottomleft: 12px;
      background-color: </xsl:text>
      <xsl:value-of select="$yelp.color.yellow.bg"/><xsl:text>;
    }
    div[class~="programlisting"] {
      background-image: url(</xsl:text>
      <xsl:value-of select="$yelp.icon.programlisting"/><xsl:text>);
      background-repeat: no-repeat;
    }
   div[class~="blockquote"] {
      background-image: url("</xsl:text>
      <xsl:value-of select="$yelp.icon.blockquote"/><xsl:text>");
      background-repeat: no-repeat;
    }
    div[class~="caution"] {
      background-image: url("</xsl:text>
      <xsl:value-of select="$yelp.icon.caution"/><xsl:text>");
    }
    div[class~="important"] {
      background-image: url("</xsl:text>
      <xsl:value-of select="$yelp.icon.important"/><xsl:text>");
    }
    div[class~="note"] {
      background-image: url("</xsl:text>
      <xsl:value-of select="$yelp.icon.note"/><xsl:text>");
    }
    div[class~="tip"] {
      background-image: url("</xsl:text>
      <xsl:value-of select="$yelp.icon.tip"/><xsl:text>");
    }
    div[class~="warning"] {
      background-image: url("</xsl:text>
      <xsl:value-of select="$yelp.icon.warning"/><xsl:text>");
    }

    <!--
    /* Gecko seems to get selection color wrong on some themes */
    /* Add this when you can replace .background with the actual
       selection foreground color */
    ::-moz-selection {
      background-color:  </xsl:text>
      <xsl:value-of select="$yelp.color.selected0"/><xsl:text>;
      color: </xsl:text>
      <xsl:value-of select="$yelp.color.background"/><xsl:text>;
    }
    -->

    html { min-height: 100%; }
    body {
      -moz-box-sizing: border-box;
      min-height: 100%;
      border: solid 1px </xsl:text>
      <xsl:value-of select="$yelp.color.base1"/><xsl:text>;
    }
    div[class~="linktrail"] {
      font-size: 0.8em;
      margin: 0px;
      padding: 3px;
      padding-left: 12px;
      padding-right: 12px;
      background-color: </xsl:text>
      <xsl:value-of select="$yelp.color.base0"/><xsl:text>;
      border: none;
      border-bottom: solid 1px </xsl:text>
      <xsl:value-of select="$yelp.color.base1"/><xsl:text>;
    }
    div[class~="linktrail"] a { text-decoration: none; }
    div[class~="linktrail"] a:hover { text-decoration: underline; }
    div[class~="navbar"] {
      font-size: 0.8em;
      margin: 0px;
      padding: 3px;
      padding-left: 12px;
      padding-right: 12px;
      background-color: </xsl:text>
      <xsl:value-of select="$yelp.color.base0"/><xsl:text>;
      border: none;
      border-top: solid 1px </xsl:text>
      <xsl:value-of select="$yelp.color.base1"/><xsl:text>;
    }
    div[class~="navbar"] a {
      text-decoration: none;
      white-space: nowrap;
    }
    div[class~="navbar"] a:hover { text-decoration: underline; }
    div[class~="navbar"] img { border: none; vertical-align: middle; }
  </xsl:text>
</xsl:template>

<xsl:template name="db2html.division.top">
  <xsl:param name="node"/>
  <xsl:param name="info"/>
  <xsl:param name="depth_of_chunk">
    <xsl:call-template name="db.chunk.depth-of-chunk">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </xsl:param>
  <div class="linktrail">
    <xsl:for-each select="($node/ancestor::*)">
      <a class="linktrail">
	<xsl:attribute name="href">
	  <xsl:call-template name="db.xref.target">
	    <xsl:with-param name="linkend" select="@id"/>
	    <xsl:with-param name="target" select="."/>
	    <xsl:with-param name="is_chunk" select="true()"/>
	  </xsl:call-template>
	</xsl:attribute>
	<xsl:attribute name="title">
	  <xsl:call-template name="db.xref.tooltip">
	    <xsl:with-param name="linkend" select="@id"/>
	    <xsl:with-param name="target"  select="."/>
	  </xsl:call-template>
	</xsl:attribute>
	<xsl:call-template name="db.titleabbrev">
	  <xsl:with-param name="node" select="."/>
	</xsl:call-template>
      </a>
      <xsl:choose>
	<xsl:when test="position() = last()">
	  <!--
	  <xsl:text> ▾</xsl:text>
	  -->
	</xsl:when>
	<xsl:otherwise>
	  <xsl:text>&#x2003;/&#x2003;</xsl:text>
	  <!--
	  <xsl:text> ▸ </xsl:text>
	  -->
	</xsl:otherwise>
      </xsl:choose>
    </xsl:for-each>
  </div>
</xsl:template>

</xsl:stylesheet>
