AC_INIT(src/yelp-main.c)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(yelp, 2.6.5)

AC_PROG_INTLTOOL

AM_MAINTAINER_MODE

AC_PROG_CC
AC_ISC_POSIX
AC_HEADER_STDC
AM_PROG_LIBTOOL
AM_PATH_ORBIT2
AM_PATH_GLIB_2_0
 
dnl NOTE : it appears that some systems do not like it when you use line
dnl        continuation charactes to split CFLAGS into readable chunks
if test "x$GCC" = "xyes"; then
   CFLAGS="$CFLAGS -Wall -Wno-uninitialized -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-sign-compare"
fi

GETTEXT_PACKAGE=yelp
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE")

ALL_LINGUAS="af am ar az be bg bn bs ca cs cy da de el en_CA en_GB eo es et eu fa fi fr ga gl gu he hi hr hu id is it ja ka kn ko li lt lv mi mk ml mn mr ms nb ne nl nn no nso pa pl pt pt_BR ro ru sk sl sq sr sr@Latn sv ta tg th tk tr uk vi wa zh_CN zh_TW zu"
AM_GLIB_GNU_GETTEXT

# AM_GLIB_GNU_GETTEXT above substs $DATADIRNAME
# this is the directory where the *.{mo,gmo} files are installed
yelplocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(yelplocaledir)


if test "x$prefix" = "xNONE"; then
  GNOMELOCALEDIR=$ac_default_prefix/share/locale
else
  GNOMELOCALEDIR=$prefix/share/locale
fi
AC_DEFINE_UNQUOTED(GNOMELOCALEDIR, "$GNOMELOCALEDIR")

PKG_CHECK_MODULES(YELP,
[
	gconf-2.0
	gnome-vfs-2.0 >= 1.1
	gtk+-2.0 >= 2.3.1
	libbonobo-2.0 >= 1.108.0
	libglade-2.0 >= 2.0.0
	libgnome-2.0 >= 2.0.2
	libgnomeui-2.0 >= 1.103.0
	libgtkhtml-2.0 >= 2.1.2
	libxml-2.0 >= 2.6.5
	libxslt >= 1.1.4
	libexslt >= 0.8.1
])

CFLAGS="$YELP_CFLAGS $CFLAGS"

YELP_MODULES="gnome-vfs-2.0 libgnomeui-2.0 libbonobo-2.0"

idl_dirs="`$PKG_CONFIG --variable=idldir gnome-vfs-2.0 libgnomeui-2.0 libbonobo-2.0 bonobo-activation-2.0`"
AC_PATH_PROGS(SED, gsed sed)
YELP_IDL_INCLUDES="`echo ${idl_dirs} | ${SED} -e 's/^/ /' -e 's/  *$//' -e 's/  */ -I /g' -e 's/^  *//'`"
AC_SUBST(YELP_IDL_INCLUDES)

dnl Check for whereis
AC_CANONICAL_HOST
  case $host in
  *-linux-gnu | *-irix6*) AC_DEFINE(HAVE_MAN_WHEREIS, 1, [man(1)  understands -w option]);;
  *-solaris*) AC_DEFINE(HAVE_MAN_DEBUG, 1, [man(1) has a -d debug option]);;
  esac

dnl ===================================================
dnl = Check for popt, reported to be needed on AIX
dnl ===================================================
AC_CHECK_LIB(popt, poptGetArgs, [POPT_LIBS="-lpopt"],
		   [AC_MSG_ERROR([popt is required to build yelp])])

AC_SUBST(POPT_LIBS)


dnl ====================================
dnl = zlib for help converters
dnl ====================================
AC_CHECK_LIB(z, gzopen, [Z_LIBS=-lz
AC_SUBST(Z_LIBS)], AC_MSG_ERROR([*** zlib is required]))

dnl ====================================
dnl = Bzip2, for the help converters
dnl ====================================
BZ_LIBS=
AC_CHECK_LIB(bz2, bzread, [AC_DEFINE(HAVE_LIBBZ2, 1, [Compile with libbz2 suppot])
			  BZ_LIBS="-lbz2"])
dnl <= Check for bzip2 > 1.0.0
    AC_CHECK_LIB(bz2, BZ2_bzread, [AC_DEFINE(HAVE_LIBBZ2, 1, [Compile with libbz2 support])
		      	  BZ_LIBS="-lbz2"
    dnl <= define the wrapper-functions to get the Bzip2 stuff working .. =>	
	   AC_DEFINE(bzread,BZ2_bzread, [Needed to get Bzip2 working])
	   AC_DEFINE(bzopen,BZ2_bzopen, [Needed to get Bzip2 working])
	   AC_DEFINE(bzdopen,BZ2_bzdopen, [Needed to get Bzip2 working])
	   AC_DEFINE(bzwrite,BZ2_bzwrite, [Needed to get Bzip2 working])
	   AC_DEFINE(bzerror,BZ2_bzerror, [Needed to get Bzip2 working])
	   AC_DEFINE(bzclose,BZ2_bzclose, [Needed to get Bzip2 working])
	   AC_DEFINE(bzflush,BZ2_bzflush, [Needed to get Bzip2 working])
	   AC_DEFINE(bzCompress,BZ2_bzCompress, [Needed to get Bzip2 working])
	   AC_DEFINE(bzCompressInit,BZ2_bzCompressInit, [Needed to get Bzip2 working])
	   AC_DEFINE(bzDecompress,BZ2_bzDecompress, [Needed to get Bzip2 working])
	   AC_DEFINE(bzDecompressInit,BZ2_bzDecompressInit, [Needed to get Bzip2 working])	
	   ])
    dnl =>
AC_SUBST(BZ_LIBS)

AC_OUTPUT([
Makefile
src/Makefile
stylesheets/Makefile
data/Makefile
data/icons/Makefile
data/ui/Makefile
po/Makefile.in
])
